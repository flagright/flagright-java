/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flagright.api.resources.consumerusers;

import com.flagright.api.core.ClientOptions;
import com.flagright.api.core.RequestOptions;
import com.flagright.api.resources.consumerusers.requests.ConsumerUsersCreateRequest;
import com.flagright.api.resources.consumerusers.types.ConsumerUsersCreateResponse;
import com.flagright.api.types.UserWithRulesResult;

public class ConsumerUsersClient {
    protected final ClientOptions clientOptions;

    private final RawConsumerUsersClient rawClient;

    public ConsumerUsersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawConsumerUsersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawConsumerUsersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * <h2>POST Consumer User</h2>
     * <code>/consumer/user</code> endpoint allows you to operate on the Consumer user entity.
     * <p>In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.</p>
     * <h3>Payload</h3>
     * <p>Each consumer user needs two mandatory fields:</p>
     * <ul>
     * <li><code>userId</code> - Unique identifier for the user</li>
     * <li><code>createdTimestamp</code> - UNIX timestamp in <em>milliseconds</em> for when the User is created in your system</li>
     * </ul>
     */
    public ConsumerUsersCreateResponse create(ConsumerUsersCreateRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * <h2>POST Consumer User</h2>
     * <code>/consumer/user</code> endpoint allows you to operate on the Consumer user entity.
     * <p>In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.</p>
     * <h3>Payload</h3>
     * <p>Each consumer user needs two mandatory fields:</p>
     * <ul>
     * <li><code>userId</code> - Unique identifier for the user</li>
     * <li><code>createdTimestamp</code> - UNIX timestamp in <em>milliseconds</em> for when the User is created in your system</li>
     * </ul>
     */
    public ConsumerUsersCreateResponse create(ConsumerUsersCreateRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * <h3>GET Consumer User</h3>
     * <code>/consumer/user</code> endpoint allows you to operate on the Consumer User entity.
     * <p>Calling <code>GET /consumer/user/{userId}</code> will return the entire user payload and rule execution results for the user with the corresponding <code>userId</code></p>
     */
    public UserWithRulesResult get(String userId) {
        return this.rawClient.get(userId).body();
    }

    /**
     * <h3>GET Consumer User</h3>
     * <code>/consumer/user</code> endpoint allows you to operate on the Consumer User entity.
     * <p>Calling <code>GET /consumer/user/{userId}</code> will return the entire user payload and rule execution results for the user with the corresponding <code>userId</code></p>
     */
    public UserWithRulesResult get(String userId, RequestOptions requestOptions) {
        return this.rawClient.get(userId, requestOptions).body();
    }
}

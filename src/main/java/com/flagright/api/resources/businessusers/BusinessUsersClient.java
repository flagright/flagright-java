/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flagright.api.resources.businessusers;

import com.flagright.api.core.ClientOptions;
import com.flagright.api.core.RequestOptions;
import com.flagright.api.resources.businessusers.requests.BusinessUsersCreateRequest;
import com.flagright.api.resources.businessusers.types.BusinessUsersCreateResponse;
import com.flagright.api.types.BusinessWithRulesResult;

public class BusinessUsersClient {
    protected final ClientOptions clientOptions;

    private final RawBusinessUsersClient rawClient;

    public BusinessUsersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawBusinessUsersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawBusinessUsersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * <h2>POST Business User</h2>
     * <code>/business/user</code> endpoint allows you to operate on the Business user entity.
     * <p>In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.</p>
     * <h3>Payload</h3>
     * <p>Each business user needs three mandatory fields:</p>
     * <ul>
     * <li><code>userId</code> - Unique identifier for the user</li>
     * <li><code>legalEntity</code> - Details of the business legal entity (CompanyGeneralDetails, FinancialDetails etc) - only <code>legalName</code>in <code>CompanyGeneralDetails</code> is mandatory</li>
     * <li><code>createdTimestamp</code> - UNIX timestamp in <em>milliseconds</em> for when the User is created in your system</li>
     * </ul>
     */
    public BusinessUsersCreateResponse create(BusinessUsersCreateRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * <h2>POST Business User</h2>
     * <code>/business/user</code> endpoint allows you to operate on the Business user entity.
     * <p>In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.</p>
     * <h3>Payload</h3>
     * <p>Each business user needs three mandatory fields:</p>
     * <ul>
     * <li><code>userId</code> - Unique identifier for the user</li>
     * <li><code>legalEntity</code> - Details of the business legal entity (CompanyGeneralDetails, FinancialDetails etc) - only <code>legalName</code>in <code>CompanyGeneralDetails</code> is mandatory</li>
     * <li><code>createdTimestamp</code> - UNIX timestamp in <em>milliseconds</em> for when the User is created in your system</li>
     * </ul>
     */
    public BusinessUsersCreateResponse create(BusinessUsersCreateRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * <h3>GET Business User</h3>
     * <code>/business/user</code> endpoint allows you to operate on the Business User entity.
     * <p>Calling <code>GET /business/user/{userId}</code> will return the entire User payload and rule execution results for the User with the corresponding <code>userId</code></p>
     */
    public BusinessWithRulesResult get(String userId) {
        return this.rawClient.get(userId).body();
    }

    /**
     * <h3>GET Business User</h3>
     * <code>/business/user</code> endpoint allows you to operate on the Business User entity.
     * <p>Calling <code>GET /business/user/{userId}</code> will return the entire User payload and rule execution results for the User with the corresponding <code>userId</code></p>
     */
    public BusinessWithRulesResult get(String userId, RequestOptions requestOptions) {
        return this.rawClient.get(userId, requestOptions).body();
    }
}

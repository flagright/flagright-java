/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flagright.api;

import com.flagright.api.core.ClientOptions;
import com.flagright.api.core.Suppliers;
import com.flagright.api.resources.batch.AsyncBatchClient;
import com.flagright.api.resources.businessuserevents.AsyncBusinessUserEventsClient;
import com.flagright.api.resources.businessusers.AsyncBusinessUsersClient;
import com.flagright.api.resources.consumeruserevents.AsyncConsumerUserEventsClient;
import com.flagright.api.resources.consumerusers.AsyncConsumerUsersClient;
import com.flagright.api.resources.transactionevents.AsyncTransactionEventsClient;
import com.flagright.api.resources.transactions.AsyncTransactionsClient;
import java.util.function.Supplier;

public class AsyncFlagright {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncTransactionsClient> transactionsClient;

    protected final Supplier<AsyncBatchClient> batchClient;

    protected final Supplier<AsyncTransactionEventsClient> transactionEventsClient;

    protected final Supplier<AsyncConsumerUsersClient> consumerUsersClient;

    protected final Supplier<AsyncBusinessUsersClient> businessUsersClient;

    protected final Supplier<AsyncConsumerUserEventsClient> consumerUserEventsClient;

    protected final Supplier<AsyncBusinessUserEventsClient> businessUserEventsClient;

    public AsyncFlagright(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.transactionsClient = Suppliers.memoize(() -> new AsyncTransactionsClient(clientOptions));
        this.batchClient = Suppliers.memoize(() -> new AsyncBatchClient(clientOptions));
        this.transactionEventsClient = Suppliers.memoize(() -> new AsyncTransactionEventsClient(clientOptions));
        this.consumerUsersClient = Suppliers.memoize(() -> new AsyncConsumerUsersClient(clientOptions));
        this.businessUsersClient = Suppliers.memoize(() -> new AsyncBusinessUsersClient(clientOptions));
        this.consumerUserEventsClient = Suppliers.memoize(() -> new AsyncConsumerUserEventsClient(clientOptions));
        this.businessUserEventsClient = Suppliers.memoize(() -> new AsyncBusinessUserEventsClient(clientOptions));
    }

    public AsyncTransactionsClient transactions() {
        return this.transactionsClient.get();
    }

    public AsyncBatchClient batch() {
        return this.batchClient.get();
    }

    public AsyncTransactionEventsClient transactionEvents() {
        return this.transactionEventsClient.get();
    }

    public AsyncConsumerUsersClient consumerUsers() {
        return this.consumerUsersClient.get();
    }

    public AsyncBusinessUsersClient businessUsers() {
        return this.businessUsersClient.get();
    }

    public AsyncConsumerUserEventsClient consumerUserEvents() {
        return this.consumerUserEventsClient.get();
    }

    public AsyncBusinessUserEventsClient businessUserEvents() {
        return this.businessUserEventsClient.get();
    }

    public static AsyncFlagrightBuilder builder() {
        return new AsyncFlagrightBuilder();
    }
}

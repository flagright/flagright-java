/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flagright.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flagright.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MpesaDetails.Builder.class)
public final class MpesaDetails {
    private final String businessShortCode;

    private final MpesaTransactionType transactionType;

    private final String phoneNumber;

    private final Optional<String> emailId;

    private final Optional<List<Tag>> tags;

    private final Map<String, Object> additionalProperties;

    private MpesaDetails(
            String businessShortCode,
            MpesaTransactionType transactionType,
            String phoneNumber,
            Optional<String> emailId,
            Optional<List<Tag>> tags,
            Map<String, Object> additionalProperties) {
        this.businessShortCode = businessShortCode;
        this.transactionType = transactionType;
        this.phoneNumber = phoneNumber;
        this.emailId = emailId;
        this.tags = tags;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Business code
     */
    @JsonProperty("businessShortCode")
    public String getBusinessShortCode() {
        return businessShortCode;
    }

    @JsonProperty("transactionType")
    public MpesaTransactionType getTransactionType() {
        return transactionType;
    }

    /**
     * @return Contact Number of the account holder
     */
    @JsonProperty("phoneNumber")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    @JsonProperty("emailId")
    public Optional<String> getEmailId() {
        return emailId;
    }

    /**
     * @return Additional information that can be added via tags
     */
    @JsonProperty("tags")
    public Optional<List<Tag>> getTags() {
        return tags;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MpesaDetails && equalTo((MpesaDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MpesaDetails other) {
        return businessShortCode.equals(other.businessShortCode)
                && transactionType.equals(other.transactionType)
                && phoneNumber.equals(other.phoneNumber)
                && emailId.equals(other.emailId)
                && tags.equals(other.tags);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.businessShortCode, this.transactionType, this.phoneNumber, this.emailId, this.tags);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BusinessShortCodeStage builder() {
        return new Builder();
    }

    public interface BusinessShortCodeStage {
        TransactionTypeStage businessShortCode(@NotNull String businessShortCode);

        Builder from(MpesaDetails other);
    }

    public interface TransactionTypeStage {
        PhoneNumberStage transactionType(@NotNull MpesaTransactionType transactionType);
    }

    public interface PhoneNumberStage {
        _FinalStage phoneNumber(@NotNull String phoneNumber);
    }

    public interface _FinalStage {
        MpesaDetails build();

        _FinalStage emailId(Optional<String> emailId);

        _FinalStage emailId(String emailId);

        _FinalStage tags(Optional<List<Tag>> tags);

        _FinalStage tags(List<Tag> tags);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements BusinessShortCodeStage, TransactionTypeStage, PhoneNumberStage, _FinalStage {
        private String businessShortCode;

        private MpesaTransactionType transactionType;

        private String phoneNumber;

        private Optional<List<Tag>> tags = Optional.empty();

        private Optional<String> emailId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(MpesaDetails other) {
            businessShortCode(other.getBusinessShortCode());
            transactionType(other.getTransactionType());
            phoneNumber(other.getPhoneNumber());
            emailId(other.getEmailId());
            tags(other.getTags());
            return this;
        }

        /**
         * <p>Business code</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("businessShortCode")
        public TransactionTypeStage businessShortCode(@NotNull String businessShortCode) {
            this.businessShortCode = Objects.requireNonNull(businessShortCode, "businessShortCode must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("transactionType")
        public PhoneNumberStage transactionType(@NotNull MpesaTransactionType transactionType) {
            this.transactionType = Objects.requireNonNull(transactionType, "transactionType must not be null");
            return this;
        }

        /**
         * <p>Contact Number of the account holder</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("phoneNumber")
        public _FinalStage phoneNumber(@NotNull String phoneNumber) {
            this.phoneNumber = Objects.requireNonNull(phoneNumber, "phoneNumber must not be null");
            return this;
        }

        /**
         * <p>Additional information that can be added via tags</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage tags(List<Tag> tags) {
            this.tags = Optional.ofNullable(tags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "tags", nulls = Nulls.SKIP)
        public _FinalStage tags(Optional<List<Tag>> tags) {
            this.tags = tags;
            return this;
        }

        @java.lang.Override
        public _FinalStage emailId(String emailId) {
            this.emailId = Optional.ofNullable(emailId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "emailId", nulls = Nulls.SKIP)
        public _FinalStage emailId(Optional<String> emailId) {
            this.emailId = emailId;
            return this;
        }

        @java.lang.Override
        public MpesaDetails build() {
            return new MpesaDetails(
                    businessShortCode, transactionType, phoneNumber, emailId, tags, additionalProperties);
        }
    }
}

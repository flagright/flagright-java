/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.flagright.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.flagright.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UserRiskScoreDetails.Builder.class)
public final class UserRiskScoreDetails {
    private final Optional<Double> kycRiskScore;

    private final Optional<Double> craRiskScore;

    private final Optional<RiskLevel> kycRiskLevel;

    private final Optional<RiskLevel> craRiskLevel;

    private final Map<String, Object> additionalProperties;

    private UserRiskScoreDetails(
            Optional<Double> kycRiskScore,
            Optional<Double> craRiskScore,
            Optional<RiskLevel> kycRiskLevel,
            Optional<RiskLevel> craRiskLevel,
            Map<String, Object> additionalProperties) {
        this.kycRiskScore = kycRiskScore;
        this.craRiskScore = craRiskScore;
        this.kycRiskLevel = kycRiskLevel;
        this.craRiskLevel = craRiskLevel;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("kycRiskScore")
    public Optional<Double> getKycRiskScore() {
        return kycRiskScore;
    }

    @JsonProperty("craRiskScore")
    public Optional<Double> getCraRiskScore() {
        return craRiskScore;
    }

    @JsonProperty("kycRiskLevel")
    public Optional<RiskLevel> getKycRiskLevel() {
        return kycRiskLevel;
    }

    @JsonProperty("craRiskLevel")
    public Optional<RiskLevel> getCraRiskLevel() {
        return craRiskLevel;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UserRiskScoreDetails && equalTo((UserRiskScoreDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UserRiskScoreDetails other) {
        return kycRiskScore.equals(other.kycRiskScore)
                && craRiskScore.equals(other.craRiskScore)
                && kycRiskLevel.equals(other.kycRiskLevel)
                && craRiskLevel.equals(other.craRiskLevel);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.kycRiskScore, this.craRiskScore, this.kycRiskLevel, this.craRiskLevel);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Double> kycRiskScore = Optional.empty();

        private Optional<Double> craRiskScore = Optional.empty();

        private Optional<RiskLevel> kycRiskLevel = Optional.empty();

        private Optional<RiskLevel> craRiskLevel = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UserRiskScoreDetails other) {
            kycRiskScore(other.getKycRiskScore());
            craRiskScore(other.getCraRiskScore());
            kycRiskLevel(other.getKycRiskLevel());
            craRiskLevel(other.getCraRiskLevel());
            return this;
        }

        @JsonSetter(value = "kycRiskScore", nulls = Nulls.SKIP)
        public Builder kycRiskScore(Optional<Double> kycRiskScore) {
            this.kycRiskScore = kycRiskScore;
            return this;
        }

        public Builder kycRiskScore(Double kycRiskScore) {
            this.kycRiskScore = Optional.ofNullable(kycRiskScore);
            return this;
        }

        @JsonSetter(value = "craRiskScore", nulls = Nulls.SKIP)
        public Builder craRiskScore(Optional<Double> craRiskScore) {
            this.craRiskScore = craRiskScore;
            return this;
        }

        public Builder craRiskScore(Double craRiskScore) {
            this.craRiskScore = Optional.ofNullable(craRiskScore);
            return this;
        }

        @JsonSetter(value = "kycRiskLevel", nulls = Nulls.SKIP)
        public Builder kycRiskLevel(Optional<RiskLevel> kycRiskLevel) {
            this.kycRiskLevel = kycRiskLevel;
            return this;
        }

        public Builder kycRiskLevel(RiskLevel kycRiskLevel) {
            this.kycRiskLevel = Optional.ofNullable(kycRiskLevel);
            return this;
        }

        @JsonSetter(value = "craRiskLevel", nulls = Nulls.SKIP)
        public Builder craRiskLevel(Optional<RiskLevel> craRiskLevel) {
            this.craRiskLevel = craRiskLevel;
            return this;
        }

        public Builder craRiskLevel(RiskLevel craRiskLevel) {
            this.craRiskLevel = Optional.ofNullable(craRiskLevel);
            return this;
        }

        public UserRiskScoreDetails build() {
            return new UserRiskScoreDetails(
                    kycRiskScore, craRiskScore, kycRiskLevel, craRiskLevel, additionalProperties);
        }
    }
}
